name: build
on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  PACKAGE_DIR: fastgraphml
  TESTS_DIR: tests
jobs:
  build:
    runs-on: self-hosted
    defaults:
      run:
        shell: bash -l {0}
    name: gpu
    steps:
      - uses: actions/checkout@v2
      - name: Activating conda env
        run: |
          source ~/miniconda3/etc/profile.d/conda.sh 
          conda activate fastgraphml
      - name: Run pytest in conda env
        run: conda run -n fastgraphml pytest 
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10"]
    name: Lint - Python ${{ matrix.python }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install packages
        run: pip install .[dev]
      - name: Run black
        run: black --check --verbose --diff --color ${{env.PACKAGE_DIR}} ${{env.TESTS_DIR}}
      - name: Run flake8
        run: flake8 ${{env.PACKAGE_DIR}} ${{env.TESTS_DIR}}
      - name: Run isort
        run: isort --check --profile=black ${{env.PACKAGE_DIR}} ${{env.TESTS_DIR}}
      - name: Run mypy
        run: mypy ${{env.PACKAGE_DIR}} ${{env.TESTS_DIR}}
      - name: Run bandit
        run: bandit --exclude "./tests/*" -r ./
  test:
    runs-on: self-hosted
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10"]
    name: Test - Python ${{ matrix.python }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/checkout@v2
      - name: Activating conda env
        run: |
          source ~/miniconda3/etc/profile.d/conda.sh 
          conda activate fastgraphml
      - name: Setup pip
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Run pytest
        run: pytest --cov=${{env.PACKAGE_DIR}} --cov-report xml --cov-report term-missing -v --color=yes --no-cov-on-fail --code-highlight=yes --cov-fail-under=75
